/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ITimingManager,
  ITimingManagerInterface,
} from "../../../contracts/interfaces/ITimingManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "minVestingDuration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "defaultExecutionDelay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "defaultCliffDuration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "updatedBy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "GlobalTimingUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minVestingDuration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "defaultExecutionDelay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "defaultCliffDuration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "updatedBy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "TimingConfigUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "getGlobalTiming",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minVestingDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defaultExecutionDelay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defaultCliffDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVestingDuration",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isConfigurable",
            type: "bool",
          },
        ],
        internalType: "struct ITimingManager.TimingConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
    ],
    name: "getInheritanceTiming",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minVestingDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defaultExecutionDelay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defaultCliffDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVestingDuration",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isConfigurable",
            type: "bool",
          },
        ],
        internalType: "struct ITimingManager.TimingConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vestingSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delaySeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cliffSeconds",
        type: "uint256",
      },
    ],
    name: "setCustomTiming",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
    ],
    name: "setProductionMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
    ],
    name: "setTestingMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "configurable",
        type: "bool",
      },
    ],
    name: "setTimingConfigurable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minVestingDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "defaultExecutionDelay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "defaultCliffDuration",
        type: "uint256",
      },
    ],
    name: "updateGlobalTiming",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minVestingDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "defaultExecutionDelay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "defaultCliffDuration",
        type: "uint256",
      },
    ],
    name: "updateInheritanceTiming",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ITimingManager__factory {
  static readonly abi = _abi;
  static createInterface(): ITimingManagerInterface {
    return new Interface(_abi) as ITimingManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ITimingManager {
    return new Contract(address, _abi, runner) as unknown as ITimingManager;
  }
}
