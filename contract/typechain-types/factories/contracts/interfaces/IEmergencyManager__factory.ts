/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IEmergencyManager,
  IEmergencyManagerInterface,
} from "../../../contracts/interfaces/IEmergencyManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "freezer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AssetsFreezed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "unfreezer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AssetsUnfreezed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "disputant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "respondent",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "DisputeRaised",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "disputantWon",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "DisputeResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "emergencyId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "executionDelay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "EmergencyApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "emergencyId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "EmergencyExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "emergencyId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "enum IEmergencyManager.EmergencyType",
        name: "emergencyType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "requestedBy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "EmergencyRaised",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "emergencyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "executionDelay",
        type: "uint256",
      },
    ],
    name: "approveEmergency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "emergencyId",
        type: "uint256",
      },
    ],
    name: "executeEmergency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
    ],
    name: "freezeAssets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
    ],
    name: "getDispute",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "disputant",
            type: "address",
          },
          {
            internalType: "address",
            name: "respondent",
            type: "address",
          },
          {
            internalType: "string",
            name: "reason",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "evidence",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "arbitrator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "raisedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "resolvedAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isResolved",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disputantWon",
            type: "bool",
          },
        ],
        internalType: "struct IEmergencyManager.DisputeData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "emergencyId",
        type: "uint256",
      },
    ],
    name: "getEmergencyRequest",
    outputs: [
      {
        components: [
          {
            internalType: "enum IEmergencyManager.EmergencyType",
            name: "emergencyType",
            type: "uint8",
          },
          {
            internalType: "enum IEmergencyManager.EmergencyStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "requestedBy",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "requestedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "approvedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executionDelay",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "reason",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "evidence",
            type: "bytes",
          },
          {
            internalType: "address[]",
            name: "approvers",
            type: "address[]",
          },
          {
            internalType: "bool",
            name: "isExecuted",
            type: "bool",
          },
        ],
        internalType: "struct IEmergencyManager.EmergencyRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
    ],
    name: "isAssetsFreezed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "respondent",
        type: "address",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "evidence",
        type: "bytes",
      },
    ],
    name: "raiseDispute",
    outputs: [
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
      {
        internalType: "enum IEmergencyManager.EmergencyType",
        name: "emergencyType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "evidence",
        type: "bytes",
      },
    ],
    name: "raiseEmergency",
    outputs: [
      {
        internalType: "uint256",
        name: "emergencyId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "disputeId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "disputantWon",
        type: "bool",
      },
    ],
    name: "resolveDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
    ],
    name: "unfreezeAssets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IEmergencyManager__factory {
  static readonly abi = _abi;
  static createInterface(): IEmergencyManagerInterface {
    return new Interface(_abi) as IEmergencyManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IEmergencyManager {
    return new Contract(address, _abi, runner) as unknown as IEmergencyManager;
  }
}
