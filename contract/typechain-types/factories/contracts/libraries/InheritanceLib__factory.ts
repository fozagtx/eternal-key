/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  InheritanceLib,
  InheritanceLibInterface,
} from "../../../contracts/libraries/InheritanceLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AssetTransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "BeneficiaryAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "BeneficiaryNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
    ],
    name: "InheritanceNotActive",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inheritanceId",
        type: "uint256",
      },
    ],
    name: "InheritanceNotTriggered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "provided",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "InvalidBasisPoints",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "InvalidTimeLock",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "MaxBeneficiariesExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "string",
        name: "required",
        type: "string",
      },
    ],
    name: "UnauthorizedAccess",
    type: "error",
  },
  {
    inputs: [],
    name: "BASIS_POINTS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_CLIFF_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_EXECUTION_DELAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_BENEFICIARIES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_MILESTONES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_VESTING_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100195760f2908161001f823930815050f35b600080fdfe60806040526004361015601157600080fd5b6000803560e01c80631f1cbe8a1460a15780632348dd1814608b5780633011071e1460715780634c05abeb146075578063aaaaaea31460715763e1f1c4a714605857600080fd5b80600319360112606e5760206040516127108152f35b80fd5b60a1565b5080600319360112606e57602060405160148152f35b5080600319360112606e57602060405160328152f35b600036600319011260b7576020604051600f8152f35b600080fdfea26469706673582212203e3fd1f9fe0e9b5ff9c54b01b6a8fa430fcc350f21ee8db21f654be6fb1eb2aa64736f6c63430008180033";

type InheritanceLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InheritanceLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InheritanceLib__factory extends ContractFactory {
  constructor(...args: InheritanceLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      InheritanceLib & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): InheritanceLib__factory {
    return super.connect(runner) as InheritanceLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InheritanceLibInterface {
    return new Interface(_abi) as InheritanceLibInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): InheritanceLib {
    return new Contract(address, _abi, runner) as unknown as InheritanceLib;
  }
}
